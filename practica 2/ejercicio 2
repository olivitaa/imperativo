{2.- Escribir un programa que: 
a. Implemente un módulo recursivo que genere y retorne una lista de números enteros “random” en el rango 100-200. Finalizar con el número 100. 
b. Un módulo recursivo que reciba la lista generada en a) e imprima los valores de la lista en el mismo orden que están almacenados. 
c. Implemente un módulo recursivo que reciba la lista generada en a) e imprima los valores de la lista en orden inverso al que están almacenados. 
d. Implemente un módulo recursivo que reciba la lista generada en a) y devuelva el mínimo valor de la lista. 
e. Implemente un módulo recursivo que reciba la lista generada en a) y un valor y devuelva verdadero si dicho valor se encuentra en la lista o falso en caso contrario.}

program j2;
type
	rango = 100..200;
	lista = ^nodo;
	nodo = record
		dato:rango;
		sig:lista;
	end;

//modulos
procedure generarlista (L:lista);
var
	ale:rango;
	nue:lista;
begin
	ale:= Random (rango)+1;
	if (ale <> 100) then begin
		generarlista (L^.sig);
		new (nue);
		nue^.dato:=ale;
		nue^.sig:=nil;
		L:= nue;
	end;
end;

procedure imprimir (L:lista);
begin
	writeln (L^.dato);
	imprimir (L^.sig);
end;

procedure imprimiralreves (L:lista);
begin
	imprimir (L^.sig);
	writeln (L^.dato);
end;

function minimo (L:lista):rango;
begin
	if (L <> nil) then begin
		if (minimo(L^.sig)>L^.dato) then
			minimo:=L^.dato
		else
			minimo:= minimo (L^.sig);
	end;
end;

function encontre (L:lista; num:rango):boolean;
var

begin
	if (L <> nil) then
		if (L^.dato = num) then
			encontre:= true;
		else
			encontre:= encontre (L^.sig,num);
end;

var

begin
	Randomize;
end;
```

