{2.- El administrador de un edificio de oficinas cuenta, en papel, con la información del pago de 
las expensas de dichas oficinas. 
Implementar un programa que invoque a módulos para cada uno de los siguientes puntos:}


program untitled;
const
	dimF = 300;
type
	rango1 = -1..300;
	oficina = record
		cod:integer;
		dni:integer;
		expensa:real;
	end;
	vector = array [rango1] of oficina;

procedure leeroficina (var o:oficina);
begin
	o.cod:= Random (999);
	writeln ("el codigo generado es:",o.cod);
	if (o.cod <> -1) then begin
		o.dni:= Random (999);
		writeln ("el dni generado es:",o.dni);
		o.expensa:= Random (999);
		writeln ("la expensa tiene un valor de:", o.expensa);
	end;
end;

{a. Genere un vector, sin orden, con a lo sumo las 300 oficinas que administra. De cada oficina 
se ingresa el código de identificación, DNI del propietario y valor de la expensa. La lectura 
finaliza cuando se ingresa el código de identificación -1, el cual no se procesa.}

procedure cargarvector (var v:vector; var dimL:rango1);
var
	o:oficina;
begin
	leeroficina(o);
	dimL:=0;
	while (o.cod<> -1) do begin
		dimL:=dimL +1;
		v[dimL]:=0;
	end;
end;

{b. Ordene el vector, aplicando el método de inserción, por código de identificación de la 
oficina.}
procedure insercion (var v:vector; dimL:rango1);
var
	i,j:rango1;
	actual:integer;
begin
	for i:= 2 to dimL do begin
		actual:=v[i].cod;
		j:= i-1;
		while (j>0) and (v[j].cod> actual) do begin
			v[j+1]:= v[j];
			j:=j-1;
		end;
		v[j+1].cod:=actual;
	end;
end;

{c. Ordene el vector aplicando el método de selección, por código de identificación de la oficina.}

procedure seleccion (var v:vector; dimL:rango1);
var
	i,j,pos:rango1;
	actual:integer;
begin
	for i:= 1 to dimL-1 do begin
		pos:=i;
		for j:= i+1 to dimL do
			if (v[j]<v[pos]) then
				pos:=j;
		actual:=v[pos];
		v[pos]:=v[i];
		v[i]:=item;
	end;
end;

var
	v:vector;
	dimL:rango1;
BEGIN
	Randomize;
	cargarvector(v,dimL);
	insercion(v,dimL);
	seleccion (v,dimL);
	ImprimirVector (v,dimL);
END.

